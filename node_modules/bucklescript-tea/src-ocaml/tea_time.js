// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Tea_sub from "./tea_sub.js";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";
import * as Web_window from "./web_window.js";

function every(interval, tagger) {
  var key = Pervasives.string_of_float(interval);
  var enableCall = function (callbacks) {
    var id = Web_window.$$setInterval((function () {
            return Curry._1(callbacks[/* enqueue */0], Curry._1(tagger, Date.now()));
          }), interval);
    return (function () {
        return window.clearTimeout(id);
      });
  };
  return Tea_sub.registration(key, enableCall);
}

function delay(msTime, msg) {
  return /* EnqueueCall */Block.__(2, [(function (callbacks) {
                Web_window.$$setTimeout((function () {
                        return Curry._1(callbacks[0][/* enqueue */0], msg);
                      }), msTime);
                return /* () */0;
              })]);
}

var second = 1000.0 * 1.0;

var minute = 60.0 * second;

var hour = 60.0 * minute;

function inMilliseconds(t) {
  return t;
}

function inSeconds(t) {
  return t / second;
}

function inMinutes(t) {
  return t / minute;
}

function inHours(t) {
  return t / hour;
}

var millisecond = 1.0;

export {
  every ,
  delay ,
  millisecond ,
  second ,
  minute ,
  hour ,
  inMilliseconds ,
  inSeconds ,
  inMinutes ,
  inHours ,
  
}
/* No side effect */
