// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE

import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_exceptions from "bs-platform/lib/es6/caml_exceptions.js";

var End_of_list = Caml_exceptions.create("Zipper.End_of_list");

var Beginning_of_list = Caml_exceptions.create("Zipper.Beginning_of_list");

function fwd(param) {
  var future = param[1];
  if (future) {
    var hd = future[0];
    return /* tuple */[
            hd,
            /* tuple */[
              /* :: */[
                hd,
                param[0]
              ],
              future[1]
            ]
          ];
  } else {
    throw End_of_list;
  }
}

function back(param) {
  var past = param[0];
  if (past) {
    return /* tuple */[
            past[1],
            /* :: */[
              past[0],
              param[1]
            ]
          ];
  } else {
    throw Beginning_of_list;
  }
}

function fwd$prime(item, param) {
  var future = param[1];
  var past = param[0];
  if (future) {
    var hd = future[0];
    if (Caml_obj.caml_equal(hd, item)) {
      return /* tuple */[
              /* :: */[
                hd,
                past
              ],
              future[1]
            ];
    } else {
      return /* tuple */[
              /* :: */[
                item,
                past
              ],
              /* [] */0
            ];
    }
  } else {
    return /* tuple */[
            /* :: */[
              item,
              past
            ],
            /* [] */0
          ];
  }
}

var init = /* tuple */[
  /* [] */0,
  /* [] */0
];

export {
  End_of_list ,
  Beginning_of_list ,
  fwd ,
  back ,
  fwd$prime ,
  init ,
  
}
/* No side effect */
