// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE

import * as Game from "./Game.bs.js";
import * as List from "bs-platform/lib/es6/list.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Board from "./Board.bs.js";
import * as Chess from "./Chess.bs.js";
import * as Tea_app from "bucklescript-tea/src-ocaml/tea_app.js";
import * as Tea_cmd from "bucklescript-tea/src-ocaml/tea_cmd.js";
import * as Tea_sub from "bucklescript-tea/src-ocaml/tea_sub.js";
import * as Keyboard from "./Keyboard.bs.js";
import * as Tea_html from "bucklescript-tea/src-ocaml/tea_html.js";
import * as Tea_random from "bucklescript-tea/src-ocaml/tea_random.js";

function board_msg(param_0) {
  return /* Board_msg */Block.__(0, [param_0]);
}

function game_msg(param_0) {
  return /* Game_msg */Block.__(1, [param_0]);
}

function random_move(param_0) {
  return /* Random_move */Block.__(2, [param_0]);
}

function key_pressed(param_0) {
  return /* Key_pressed */Block.__(3, [param_0]);
}

function init() {
  return /* tuple */[
          /* record */[
            /* game */Game.init,
            /* board */Board.init
          ],
          Tea_cmd.none
        ];
}

function update(model, param) {
  if (typeof param === "number") {
    var match = Chess.game_status(model[/* game */0][/* position */0]);
    var tmp;
    if (typeof match === "number" || !match.tag) {
      tmp = Tea_cmd.none;
    } else {
      var move_list = match[0];
      tmp = Tea_random.generate((function (random_number) {
              return /* Random_move */Block.__(2, [List.nth(move_list, random_number)]);
            }), Tea_random.$$int(0, List.length(move_list)));
    }
    return /* tuple */[
            model,
            tmp
          ];
  } else {
    switch (param.tag | 0) {
      case 0 : 
          var msg = param[0];
          if (msg.tag) {
            return /* tuple */[
                    model,
                    Tea_cmd.msg(/* Game_msg */Block.__(1, [/* Move */Block.__(0, [msg[0]])]))
                  ];
          } else {
            var match$1 = Board.update(model[/* board */1], msg);
            return /* tuple */[
                    /* record */[
                      /* game */model[/* game */0],
                      /* board */match$1[0]
                    ],
                    Tea_cmd.map(board_msg, match$1[1])
                  ];
          }
      case 1 : 
          var match$2 = Game.update(model[/* game */0], param[0]);
          return /* tuple */[
                  /* record */[
                    /* game */match$2[0],
                    /* board */model[/* board */1]
                  ],
                  Tea_cmd.map(game_msg, match$2[1])
                ];
      case 2 : 
          return /* tuple */[
                  model,
                  Tea_cmd.msg(/* Game_msg */Block.__(1, [/* Move */Block.__(0, [param[0]])]))
                ];
      case 3 : 
          var key_event = param[0];
          var match$3 = key_event[/* ctrl */2];
          var match$4 = key_event[/* key_code */0];
          var tmp$1;
          var exit = 0;
          if (match$3) {
            if (match$4 !== 66) {
              if (match$4 !== 70) {
                if (match$4 !== 82) {
                  exit = 1;
                } else {
                  tmp$1 = Tea_cmd.msg(/* Random_button */0);
                }
              } else {
                tmp$1 = Tea_cmd.msg(/* Game_msg */Block.__(1, [/* Forward */1]));
              }
            } else {
              tmp$1 = Tea_cmd.msg(/* Game_msg */Block.__(1, [/* Take_back */0]));
            }
          } else {
            exit = 1;
          }
          if (exit === 1) {
            var switcher = match$4 - 37 | 0;
            if (switcher > 2 || switcher < 0) {
              tmp$1 = Tea_cmd.none;
            } else {
              switch (switcher) {
                case 0 : 
                    tmp$1 = Tea_cmd.msg(/* Game_msg */Block.__(1, [/* Take_back */0]));
                    break;
                case 1 : 
                    tmp$1 = Tea_cmd.none;
                    break;
                case 2 : 
                    tmp$1 = Tea_cmd.msg(/* Game_msg */Block.__(1, [/* Forward */1]));
                    break;
                
              }
            }
          }
          return /* tuple */[
                  model,
                  tmp$1
                ];
      
    }
  }
}

function view(model) {
  var match = Chess.game_status(model[/* game */0][/* position */0]);
  var interactable;
  interactable = typeof match === "number" || !match.tag ? /* Not_interactable */0 : /* Interactable */[
      model[/* game */0][/* position */0][/* turn */1],
      match[0]
    ];
  return Tea_html.div(undefined, undefined, /* [] */0, /* :: */[
              Tea_app.map(board_msg, Board.view(interactable, model[/* game */0][/* position */0][/* ar */0], model[/* board */1])),
              /* :: */[
                Tea_html.p(undefined, undefined, /* [] */0, /* :: */[
                      Tea_app.map(board_msg, Board.flip_button_view),
                      /* :: */[
                        Tea_html.button(undefined, undefined, /* :: */[
                              Tea_html.onClick(/* Random_button */0),
                              /* [] */0
                            ], /* :: */[
                              Tea_html.text("Make a random move!"),
                              /* [] */0
                            ]),
                        /* :: */[
                          Tea_html.button(undefined, undefined, /* :: */[
                                Tea_html.onClick(/* Game_msg */Block.__(1, [/* Take_back */0])),
                                /* [] */0
                              ], /* :: */[
                                Tea_html.text("Take back"),
                                /* [] */0
                              ]),
                          /* [] */0
                        ]
                      ]
                    ]),
                /* :: */[
                  Tea_app.map(game_msg, Game.view(model[/* game */0])),
                  /* [] */0
                ]
              ]
            ]);
}

function subscriptions(model) {
  return Tea_sub.batch(/* :: */[
              Tea_sub.map(board_msg, Board.subscriptions(model[/* board */1])),
              /* :: */[
                Keyboard.downs(undefined, key_pressed),
                /* [] */0
              ]
            ]);
}

var partial_arg = /* record */[
  /* init */init,
  /* update */update,
  /* view */view,
  /* subscriptions */subscriptions
];

function main(param, param$1) {
  return Tea_app.standardProgram(partial_arg, param, param$1);
}

var random_button = /* Random_button */0;

export {
  board_msg ,
  game_msg ,
  random_button ,
  random_move ,
  key_pressed ,
  init ,
  update ,
  view ,
  subscriptions ,
  main ,
  
}
/* Game Not a pure module */
